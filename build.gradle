plugins {
    id 'java'
    id 'application'
}

group 'com.xojangstudios'
version '0.0-PreDevelopment'

sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenCentral()
}

// Define LWJGL and other versions
ext {
    lwjglVersion = '3.3.6'
    jomlVersion = '1.10.7'
    jomlPrimitivesVersion = '1.10.0'
    steamworks4jVersion = '1.9.0'
    steamworks4jServerVersion = '1.9.0'
    lwjglNatives = getLwjglNatives(project)
}

// Define OS-specific native library switcher
def getLwjglNatives(project) {
    def os = System.getProperty('os.name')
    def arch = System.getProperty('os.arch')

    if (os.contains('Mac')) {
        return arch.startsWith('aarch64') ? 'natives-macos-arm64' : 'natives-macos'
    } else if (os.contains('Windows')) {
        return arch.contains('64') ? 'natives-windows' : 'natives-windows-x86'
    } else if (os.contains('Linux')) {
        if (arch.startsWith('arm') || arch.startsWith('aarch64')) {
            return 'natives-linux-arm' + (arch.contains('64') || arch.startsWith('armv8') ? '64' : '32')
        } else if (arch.startsWith('ppc')) {
            return 'natives-linux-ppc64le'
        } else if (arch.startsWith('riscv')) {
            return 'natives-linux-riscv64'
        }
        return 'natives-linux'
    } else if (os.contains('FreeBSD')) {
        return 'natives-freebsd'
    }

    throw new GradleException("Unsupported OS: $os")
}

// Define LWJGL dependencies
dependencies {
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-assimp"
    implementation "org.lwjgl:lwjgl-bgfx"
    implementation "org.lwjgl:lwjgl-cuda"
    implementation "org.lwjgl:lwjgl-egl"
    implementation "org.lwjgl:lwjgl-fmod"
    implementation "org.lwjgl:lwjgl-freetype"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-harfbuzz"
    implementation "org.lwjgl:lwjgl-hwloc"
    implementation "org.lwjgl:lwjgl-jawt"
    implementation "org.lwjgl:lwjgl-jemalloc"
    implementation "org.lwjgl:lwjgl-ktx"
    implementation "org.lwjgl:lwjgl-libdivide"
    implementation "org.lwjgl:lwjgl-llvm"
    implementation "org.lwjgl:lwjgl-lmdb"
    implementation "org.lwjgl:lwjgl-lz4"
    implementation "org.lwjgl:lwjgl-meow"
    implementation "org.lwjgl:lwjgl-meshoptimizer"
    implementation "org.lwjgl:lwjgl-msdfgen"
    implementation "org.lwjgl:lwjgl-nanovg"
    implementation "org.lwjgl:lwjgl-nfd"
    implementation "org.lwjgl:lwjgl-nuklear"
    implementation "org.lwjgl:lwjgl-odbc"
    implementation "org.lwjgl:lwjgl-openal"
    implementation "org.lwjgl:lwjgl-opencl"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-opengles"
    implementation "org.lwjgl:lwjgl-openvr"
    implementation "org.lwjgl:lwjgl-openxr"
    implementation "org.lwjgl:lwjgl-opus"
    implementation "org.lwjgl:lwjgl-ovr"
    implementation "org.lwjgl:lwjgl-par"
    implementation "org.lwjgl:lwjgl-remotery"
    implementation "org.lwjgl:lwjgl-rpmalloc"
    implementation "org.lwjgl:lwjgl-shaderc"
    implementation "org.lwjgl:lwjgl-sse"
    implementation "org.lwjgl:lwjgl-stb"
    implementation "org.lwjgl:lwjgl-tinyexr"
    implementation "org.lwjgl:lwjgl-tinyfd"
    implementation "org.lwjgl:lwjgl-tootle"
    implementation "org.lwjgl:lwjgl-vma"
    implementation "org.lwjgl:lwjgl-vulkan"
    implementation "org.lwjgl:lwjgl-xxhash"
    implementation "org.lwjgl:lwjgl-yoga"
    implementation "org.lwjgl:lwjgl-zstd"

    runtimeOnly "org.lwjgl:lwjgl:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-assimp:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-bgfx:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-freetype:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-harfbuzz:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-hwloc:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-jemalloc:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-ktx:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-libdivide:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-llvm:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-lmdb:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-lz4:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-meow:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-meshoptimizer:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-msdfgen:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nanovg:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nfd:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-nuklear:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openal:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengles:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openvr:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-openxr:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opus:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-ovr:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-par:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-remotery:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-rpmalloc:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-shaderc:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-sse:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-tinyexr:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-tinyfd:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-tootle:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-vma:$lwjglNatives"
    if (lwjglNatives == "natives-macos" || lwjglNatives == "natives-macos-arm64") runtimeOnly "org.lwjgl:lwjgl-vulkan:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-xxhash:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-yoga:$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-zstd:$lwjglNatives"
    implementation "org.joml:joml:${jomlVersion}"
    implementation "org.joml:joml-primitives:${jomlPrimitivesVersion}"
    implementation "com.code-disaster.steamworks4j:steamworks4j:${steamworks4jVersion}"
    implementation "com.code-disaster.steamworks4j:steamworks4j-server:${steamworks4jServerVersion}"
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'com.xojangstudios.eaglecrafty.core.Game'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs += ['-Xlint:unchecked', '-Xlint:deprecation']
}

tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}